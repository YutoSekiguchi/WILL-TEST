"use strict";class e{get dependenciesESM(){return{quickselect:`${this.prefix}/node_modules/quickselect/index.js`,rbush:`${this.prefix}/node_modules/rbush/index.js`,"gl-matrix":`${this.prefix}/node_modules/gl-matrix/esm/index.js`,"js-ext":`${this.prefix}/node_modules/js-ext/js-ext-min.mjs`,"digital-ink":`${this.prefix}/node_modules/digital-ink/digital-ink-min.mjs`}}get devDependenciesESM(){return Object.assign({},this.dependenciesESM,{"js-ext":`${this.prefix}/node_modules/js-ext/js-ext.mjs`,"digital-ink":`${this.prefix}/node_modules/digital-ink/digital-ink.mjs`})}get dependenciesUMD(){return{"clipper-lib":`${this.prefix}/node_modules/clipper-lib/clipper.js`,poly2tri:`${this.prefix}/node_modules/poly2tri/dist/poly2tri.min.js`,protobufjs:`${this.prefix}/node_modules/protobufjs/dist/protobuf.min.js`,long:`${this.prefix}/node_modules/long/dist/long.js`,"js-md5":`${this.prefix}/node_modules/js-md5/build/md5.min.js`,jszip:`${this.prefix}/node_modules/jszip/dist/jszip.min.js`,rbush:`${this.prefix}/node_modules/rbush/rbush.js`,"gl-matrix":`${this.prefix}/node_modules/gl-matrix/gl-matrix.js`,"js-ext":`${this.prefix}/node_modules/js-ext/js-ext-min.js`,"digital-ink":`${this.prefix}/node_modules/digital-ink/digital-ink-min.js`}}get devDependenciesUMD(){return Object.assign({},this.dependenciesUMD,{poly2tri:`${this.prefix}/node_modules/poly2tri/dist/poly2tri.js`,protobufjs:`${this.prefix}/node_modules/protobufjs/dist/protobuf.js`,"js-md5":`${this.prefix}/node_modules/js-md5/src/md5.js`,jszip:`${this.prefix}/node_modules/jszip/dist/jszip.js`,"js-ext":`${this.prefix}/node_modules/js-ext/js-ext.js`,"digital-ink":`${this.prefix}/node_modules/digital-ink/digital-ink.js`})}constructor(e=!0,i=""){this.cdn=e||"function"==typeof DedicatedWorkerGlobalScope,this.prefix=i}build(){return this.dependencies||(e.dev?this.cdn?this.dependencies=Object.assign({},this.devDependenciesUMD):this.dependencies=Object.assign({},this.devDependenciesUMD,this.devDependenciesESM):this.cdn?this.dependencies=Object.assign({},this.dependenciesUMD):this.dependencies=Object.assign({},this.dependenciesUMD,this.dependenciesESM)),this.dependencies}include(e={}){this.dependencies=Object.assign(this.build(),e)}integrate(){if(this.build(),this.cdn)if("function"==typeof DedicatedWorkerGlobalScope)Object.values(this.dependencies).forEach((e=>self.importScripts(e)));else{if("undefined"==typeof document)throw new Error("Integration failed. Supported env is browser - main or worker thread!");Object.values(this.dependencies).forEach((e=>document.write(`<script type="text/javascript" src="${e}"><\/script>`)))}else{if("undefined"==typeof document)throw new Error("Integration failed. Supported env is browser - main thread!");{let e={imports:this.dependencies},i=document.createElement("script");i.setAttribute("type","importmap"),i.textContent=JSON.stringify(e,0,4),document.currentScript?document.currentScript.after(i):document.head.appendChild(i)}}}static linkWorkers(...e){for(let i of e){let e=i.buildWorkerURL().split(location.host).last,t=document.createElement("link");t.setAttribute("rel","modulepreload"),t.setAttribute("href",e),document.head.appendChild(t)}}static integrate(i){new e(!0,i).integrate()}static integrateECMA6(i,t){let s=new e(!1,t);s.include(i),s.integrate()}static getCDNImports(i){return new e(!0,i).build()}}module.exports=e;
